{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdal\\\\Desktop\\\\rojet sems belha9\\\\src\\\\chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false); // Controls chatbot visibility\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [recipes, setRecipes] = useState(JSON.parse(localStorage.getItem(\"recipes\")) || []);\n  const [isTyping, setIsTyping] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const chatWindowRef = useRef(null);\n  const API_ID = \"2924ba02\";\n  const API_KEY = \"5bddcb2069c125bfb9efe35124827718\"; //  Edamam API Key\n\n  useEffect(() => {\n    localStorage.setItem(\"recipes\", JSON.stringify(recipes));\n  }, [recipes]);\n  const autoScroll = () => {\n    var _chatWindowRef$curren;\n    (_chatWindowRef$curren = chatWindowRef.current) === null || _chatWindowRef$curren === void 0 ? void 0 : _chatWindowRef$curren.scrollTo({\n      top: chatWindowRef.current.scrollHeight,\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    autoScroll();\n  }, [messages]);\n  const toggleVisibility = () => {\n    setIsVisible(!isVisible);\n  };\n  const sendMessage = async () => {\n    if (input.trim() === \"\") return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInput(\"\");\n    setIsTyping(true);\n    if (input.toLowerCase().startsWith(\"recipe for\")) {\n      const recipeName = input.replace(/^recipe for/i, \"\").trim().toLowerCase();\n      const selectedRecipe = recipes.find(recipe => recipe.label.toLowerCase() === recipeName);\n      setIsTyping(false);\n      if (selectedRecipe) {\n        const details = `\n          Ingredients: ${selectedRecipe.ingredientLines.join(\", \")}\n          Calories: ${Math.round(selectedRecipe.calories)} kcal\n          Health Labels: ${selectedRecipe.healthLabels.join(\", \")}\n        `;\n        const botMessage = {\n          sender: \"bot\",\n          text: `Here are the details for \"${selectedRecipe.label}\": ${details}`\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n      } else {\n        const botMessage = {\n          sender: \"bot\",\n          text: \"Sorry, I couldn't find the recipe you're asking for. Please search for a recipe first.\"\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n      }\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await axios.get(`https://api.edamam.com/search?q=${input}&app_id=${API_ID}&app_key=${API_KEY}&from=0&to=3&calories=591-722&health=alcohol-free`);\n      setIsTyping(false);\n      setIsLoading(false);\n      const foundRecipes = response.data.hits.map(hit => ({\n        label: hit.recipe.label,\n        ingredientLines: hit.recipe.ingredientLines,\n        calories: hit.recipe.calories,\n        healthLabels: hit.recipe.healthLabels\n      }));\n      if (foundRecipes.length === 0) {\n        setMessages(prevMessages => [...prevMessages, {\n          sender: \"bot\",\n          text: \"Sorry, I couldn't find any recipes for that. Try another ingredient!\"\n        }]);\n        return;\n      }\n      setRecipes(foundRecipes);\n      const recipesList = foundRecipes.map(recipe => recipe.label).join(\", \");\n      const botMessage = {\n        sender: \"bot\",\n        text: `Here are some recipes I found: ${recipesList}. You can ask for ingredients by typing \"Recipe for [recipe name]\".`\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error(\"Error fetching recipes:\", error);\n      setIsTyping(false);\n      setIsLoading(false);\n      setMessages(prevMessages => [...prevMessages, {\n        sender: \"bot\",\n        text: \"Oops! Something went wrong. Please try again.\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => saveRecipe(recipe),\n      style: {\n        backgroundColor: \"#0078d7\",\n        color: \"#fff\",\n        border: \"none\",\n        padding: \"5px\",\n        marginLeft: \"5px\",\n        cursor: \"pointer\",\n        borderRadius: \"5px\"\n      },\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleVisibility,\n      style: {\n        position: \"fixed\",\n        bottom: \"20px\",\n        left: \"20px\",\n        backgroundColor: \"#0078d7\",\n        color: \"#fff\",\n        border: \"none\",\n        borderRadius: \"50%\",\n        width: \"50px\",\n        height: \"50px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\n        cursor: \"pointer\"\n      },\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        bottom: \"80px\",\n        left: \"20px\",\n        width: \"350px\",\n        maxHeight: \"400px\",\n        borderRadius: \"10px\",\n        boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\n        overflow: \"hidden\",\n        fontFamily: \"'Roboto', sans-serif\",\n        backgroundColor: \"#f9f9f9\",\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#0078d7\",\n          padding: \"10px 20px\",\n          color: \"#fff\",\n          textAlign: \"center\",\n          fontWeight: \"bold\"\n        },\n        children: \"Recipe Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatWindowRef,\n        style: {\n          flex: 1,\n          overflowY: \"auto\",\n          padding: \"10px\",\n          backgroundColor: \"#fff\"\n        },\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: msg.sender === \"user\" ? \"right\" : \"left\",\n            margin: \"10px 0\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"inline-block\",\n              padding: \"10px\",\n              borderRadius: \"15px\",\n              backgroundColor: msg.sender === \"user\" ? \"#0078d7\" : \"#e0e0e0\",\n              color: msg.sender === \"user\" ? \"#fff\" : \"#000\"\n            },\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"left\",\n            margin: \"10px 0\",\n            fontStyle: \"italic\"\n          },\n          children: \"Chatbot is typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          padding: \"10px\",\n          backgroundColor: \"#f1f1f1\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          style: {\n            flex: 1,\n            padding: \"10px\",\n            borderRadius: \"20px\",\n            border: \"1px solid #ccc\",\n            outline: \"none\"\n          },\n          placeholder: \"Type an ingredient or 'Recipe for [recipe name]'...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          style: {\n            backgroundColor: \"#0078d7\",\n            color: \"#fff\",\n            border: \"none\",\n            borderRadius: \"50%\",\n            width: \"40px\",\n            height: \"40px\",\n            marginLeft: \"10px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            cursor: \"pointer\"\n          },\n          children: \"\\u27A4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          padding: \"10px\",\n          fontStyle: \"italic\"\n        },\n        children: \"Searching for recipes...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Chatbot, \"Tj1YoEgNBv+26XwZiEEHVI6MF3c=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","isVisible","setIsVisible","messages","setMessages","input","setInput","recipes","setRecipes","JSON","parse","localStorage","getItem","isTyping","setIsTyping","isLoading","setIsLoading","chatWindowRef","API_ID","API_KEY","setItem","stringify","autoScroll","_chatWindowRef$curren","current","scrollTo","top","scrollHeight","behavior","toggleVisibility","sendMessage","trim","userMessage","sender","text","prevMessages","toLowerCase","startsWith","recipeName","replace","selectedRecipe","find","recipe","label","details","ingredientLines","join","Math","round","calories","healthLabels","botMessage","response","get","foundRecipes","data","hits","map","hit","length","recipesList","error","console","children","onClick","saveRecipe","style","backgroundColor","color","border","padding","marginLeft","cursor","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","position","bottom","left","width","height","display","alignItems","justifyContent","boxShadow","maxHeight","overflow","fontFamily","flexDirection","textAlign","fontWeight","ref","flex","overflowY","msg","index","margin","fontStyle","type","value","onChange","e","target","outline","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/abdal/Desktop/rojet sems belha9/src/chatbot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Chatbot = () => {\r\n  const [isVisible, setIsVisible] = useState(false); // Controls chatbot visibility\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [recipes, setRecipes] = useState(\r\n    JSON.parse(localStorage.getItem(\"recipes\")) || []\r\n  );\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const chatWindowRef = useRef(null);\r\n\r\n  const API_ID = \"2924ba02\"; \r\n  const API_KEY = \"5bddcb2069c125bfb9efe35124827718\"; //  Edamam API Key\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"recipes\", JSON.stringify(recipes));\r\n  }, [recipes]);\r\n\r\n  const autoScroll = () => {\r\n    chatWindowRef.current?.scrollTo({\r\n      top: chatWindowRef.current.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    autoScroll();\r\n  }, [messages]);\r\n\r\n  const toggleVisibility = () => {\r\n    setIsVisible(!isVisible);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (input.trim() === \"\") return;\r\n\r\n    const userMessage = { sender: \"user\", text: input };\r\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n    setInput(\"\");\r\n    setIsTyping(true);\r\n\r\n    if (input.toLowerCase().startsWith(\"recipe for\")) {\r\n      const recipeName = input.replace(/^recipe for/i, \"\").trim().toLowerCase();\r\n      const selectedRecipe = recipes.find(\r\n        (recipe) => recipe.label.toLowerCase() === recipeName\r\n      );\r\n\r\n      setIsTyping(false);\r\n\r\n      if (selectedRecipe) {\r\n        const details = `\r\n          Ingredients: ${selectedRecipe.ingredientLines.join(\", \")}\r\n          Calories: ${Math.round(selectedRecipe.calories)} kcal\r\n          Health Labels: ${selectedRecipe.healthLabels.join(\", \")}\r\n        `;\r\n        const botMessage = {\r\n          sender: \"bot\",\r\n          text: `Here are the details for \"${selectedRecipe.label}\": ${details}`,\r\n        };\r\n        setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n      } else {\r\n        const botMessage = {\r\n          sender: \"bot\",\r\n          text: \"Sorry, I couldn't find the recipe you're asking for. Please search for a recipe first.\",\r\n        };\r\n        setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.edamam.com/search?q=${input}&app_id=${API_ID}&app_key=${API_KEY}&from=0&to=3&calories=591-722&health=alcohol-free`\r\n      );\r\n\r\n      setIsTyping(false);\r\n      setIsLoading(false);\r\n\r\n      const foundRecipes = response.data.hits.map((hit) => ({\r\n        label: hit.recipe.label,\r\n        ingredientLines: hit.recipe.ingredientLines,\r\n        calories: hit.recipe.calories,\r\n        healthLabels: hit.recipe.healthLabels,\r\n      }));\r\n\r\n      if (foundRecipes.length === 0) {\r\n        setMessages((prevMessages) => [\r\n          ...prevMessages,\r\n          { sender: \"bot\", text: \"Sorry, I couldn't find any recipes for that. Try another ingredient!\" },\r\n        ]);\r\n        return;\r\n      }\r\n\r\n      setRecipes(foundRecipes);\r\n\r\n      const recipesList = foundRecipes\r\n        .map((recipe) => recipe.label)\r\n        .join(\", \");\r\n\r\n      const botMessage = {\r\n        sender: \"bot\",\r\n        text: `Here are some recipes I found: ${recipesList}. You can ask for ingredients by typing \"Recipe for [recipe name]\".`,\r\n      };\r\n\r\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching recipes:\", error);\r\n      setIsTyping(false);\r\n      setIsLoading(false);\r\n      setMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { sender: \"bot\", text: \"Oops! Something went wrong. Please try again.\" },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <><button\r\n    onClick={() => saveRecipe(recipe)}\r\n    style={{\r\n      backgroundColor: \"#0078d7\",\r\n      color: \"#fff\",\r\n      border: \"none\",\r\n      padding: \"5px\",\r\n      marginLeft: \"5px\",\r\n      cursor: \"pointer\",\r\n      borderRadius: \"5px\",\r\n    }}\r\n  >\r\n    Save\r\n  </button>\r\n  \r\n\r\n      <button\r\n        onClick={toggleVisibility}\r\n        style={{\r\n          position: \"fixed\",\r\n          bottom: \"20px\",\r\n          left: \"20px\",\r\n          backgroundColor: \"#0078d7\",\r\n          color: \"#fff\",\r\n          border: \"none\",\r\n          borderRadius: \"50%\",\r\n          width: \"50px\",\r\n          height: \"50px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        💬\r\n      </button>\r\n\r\n      {isVisible && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            bottom: \"80px\",\r\n            left: \"20px\",\r\n            width: \"350px\",\r\n            maxHeight: \"400px\",\r\n            borderRadius: \"10px\",\r\n            boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\r\n            overflow: \"hidden\",\r\n            fontFamily: \"'Roboto', sans-serif\",\r\n            backgroundColor: \"#f9f9f9\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#0078d7\",\r\n              padding: \"10px 20px\",\r\n              color: \"#fff\",\r\n              textAlign: \"center\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Recipe Chatbot\r\n          </div>\r\n          <div\r\n            ref={chatWindowRef}\r\n            style={{\r\n              flex: 1,\r\n              overflowY: \"auto\",\r\n              padding: \"10px\",\r\n              backgroundColor: \"#fff\",\r\n            }}\r\n          >\r\n            {messages.map((msg, index) => (\r\n              <div\r\n                key={index}\r\n                style={{\r\n                  textAlign: msg.sender === \"user\" ? \"right\" : \"left\",\r\n                  margin: \"10px 0\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    padding: \"10px\",\r\n                    borderRadius: \"15px\",\r\n                    backgroundColor: msg.sender === \"user\" ? \"#0078d7\" : \"#e0e0e0\",\r\n                    color: msg.sender === \"user\" ? \"#fff\" : \"#000\",\r\n                  }}\r\n                >\r\n                  {msg.text}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {isTyping && (\r\n              <div style={{ textAlign: \"left\", margin: \"10px 0\", fontStyle: \"italic\" }}>\r\n                Chatbot is typing...\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              padding: \"10px\",\r\n              backgroundColor: \"#f1f1f1\",\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              style={{\r\n                flex: 1,\r\n                padding: \"10px\",\r\n                borderRadius: \"20px\",\r\n                border: \"1px solid #ccc\",\r\n                outline: \"none\",\r\n              }}\r\n              placeholder=\"Type an ingredient or 'Recipe for [recipe name]'...\"\r\n            />\r\n            <button\r\n              onClick={sendMessage}\r\n              style={{\r\n                backgroundColor: \"#0078d7\",\r\n                color: \"#fff\",\r\n                border: \"none\",\r\n                borderRadius: \"50%\",\r\n                width: \"40px\",\r\n                height: \"40px\",\r\n                marginLeft: \"10px\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              ➤\r\n            </button>\r\n          </div>\r\n          {isLoading && (\r\n            <div style={{ textAlign: \"center\", padding: \"10px\", fontStyle: \"italic\" }}>\r\n              Searching for recipes...\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}