{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Haroun\\\\Desktop\\\\projet\\\\src\\\\search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate from React Router\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [query, setQuery] = useState(\"\"); // Stores the search query\n  const [suggestions, setSuggestions] = useState([]); // Stores recipe suggestions\n  const [loading, setLoading] = useState(false); // Tracks loading state\n  const navigate = useNavigate(); // Initialize the useNavigate hook\n\n  // Fetch suggestions as the user types\n  const fetchSuggestions = async searchTerm => {\n    if (!searchTerm) {\n      setSuggestions([]);\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await axios.get(\"https://api.edamam.com/api/recipes/v2\", {\n        params: {\n          q: searchTerm,\n          // User's query\n          type: \"public\",\n          app_id: \"2924ba02\",\n          // Use environment variables for API credentials\n          app_key: \"5bddcb2069c125bfb9efe35124827718\",\n          from: 0,\n          // Fetch the first few results\n          to: 5 // Limit to 5 suggestions\n        }\n      });\n\n      // Extract recipe names and store them as suggestions\n      const recipeSuggestions = response.data.hits.map(hit => ({\n        label: hit.recipe.label,\n        image: hit.recipe.image,\n        url: hit.recipe.url,\n        id: hit.recipe.uri.split(\"_\")[1] // Extract a unique ID from the recipe URI\n      }));\n      setSuggestions(recipeSuggestions);\n    } catch (error) {\n      console.error(\"Error fetching suggestions:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle query change and fetch suggestions\n  const handleInputChange = event => {\n    const searchTerm = event.target.value;\n    setQuery(searchTerm);\n    fetchSuggestions(searchTerm);\n  };\n\n  // Handle selecting a suggestion and navigate to the recipe page\n  const handleSuggestionClick = recipe => {\n    navigate(`/recipe/${recipe.id}`); // Navigate to the recipe detail page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      margin: \"20px auto\",\n      maxWidth: \"600px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: handleInputChange,\n      placeholder: \"Search for a dish...\",\n      style: {\n        width: \"100%\",\n        padding: \"10px\",\n        borderRadius: \"4px\",\n        border: \"1px solid #ddd\",\n        fontSize: \"16px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: \"none\",\n        padding: \"0\",\n        margin: \"10px 0 0\",\n        border: \"1px solid #ddd\",\n        borderRadius: \"4px\",\n        backgroundColor: \"#fff\",\n        position: \"absolute\",\n        width: \"100%\",\n        zIndex: 10\n      },\n      children: suggestions.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSuggestionClick(recipe),\n        style: {\n          padding: \"10px\",\n          borderBottom: \"1px solid #eee\",\n          cursor: \"pointer\",\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.image,\n          alt: recipe.label,\n          style: {\n            width: \"40px\",\n            height: \"40px\",\n            borderRadius: \"4px\",\n            objectFit: \"cover\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: recipe.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"ok4rmKC+VNXvjPebbFWHdvQh0O0=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","SearchBar","_s","query","setQuery","suggestions","setSuggestions","loading","setLoading","navigate","fetchSuggestions","searchTerm","response","get","params","q","type","app_id","app_key","from","to","recipeSuggestions","data","hits","map","hit","label","recipe","image","url","id","uri","split","error","console","handleInputChange","event","target","value","handleSuggestionClick","style","textAlign","margin","maxWidth","children","onChange","placeholder","width","padding","borderRadius","border","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","length","listStyle","backgroundColor","position","zIndex","index","onClick","borderBottom","cursor","display","alignItems","gap","src","alt","height","objectFit","_c","$RefreshReg$"],"sources":["C:/Users/Haroun/Desktop/projet/src/search.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate from React Router\r\n\r\nconst SearchBar = () => {\r\n  const [query, setQuery] = useState(\"\"); // Stores the search query\r\n  const [suggestions, setSuggestions] = useState([]); // Stores recipe suggestions\r\n  const [loading, setLoading] = useState(false); // Tracks loading state\r\n  const navigate = useNavigate(); // Initialize the useNavigate hook\r\n\r\n  // Fetch suggestions as the user types\r\n  const fetchSuggestions = async (searchTerm) => {\r\n    if (!searchTerm) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const response = await axios.get(\"https://api.edamam.com/api/recipes/v2\", {\r\n        params: {\r\n          q: searchTerm, // User's query\r\n          type: \"public\",\r\n          app_id: \"2924ba02\", // Use environment variables for API credentials\r\n          app_key: \"5bddcb2069c125bfb9efe35124827718\",\r\n          from: 0, // Fetch the first few results\r\n          to: 5, // Limit to 5 suggestions\r\n        },\r\n      });\r\n\r\n      // Extract recipe names and store them as suggestions\r\n      const recipeSuggestions = response.data.hits.map((hit) => ({\r\n        label: hit.recipe.label,\r\n        image: hit.recipe.image,\r\n        url: hit.recipe.url,\r\n        id: hit.recipe.uri.split(\"_\")[1], // Extract a unique ID from the recipe URI\r\n      }));\r\n\r\n      setSuggestions(recipeSuggestions);\r\n    } catch (error) {\r\n      console.error(\"Error fetching suggestions:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle query change and fetch suggestions\r\n  const handleInputChange = (event) => {\r\n    const searchTerm = event.target.value;\r\n    setQuery(searchTerm);\r\n    fetchSuggestions(searchTerm);\r\n  };\r\n\r\n  // Handle selecting a suggestion and navigate to the recipe page\r\n  const handleSuggestionClick = (recipe) => {\r\n    navigate(`/recipe/${recipe.id}`); // Navigate to the recipe detail page\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", margin: \"20px auto\", maxWidth: \"600px\" }}>\r\n      {/* Search Bar */}\r\n      <input\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Search for a dish...\"\r\n        style={{\r\n          width: \"100%\",\r\n          padding: \"10px\",\r\n          borderRadius: \"4px\",\r\n          border: \"1px solid #ddd\",\r\n          fontSize: \"16px\",\r\n        }}\r\n      />\r\n\r\n      {/* Suggestions Dropdown */}\r\n      {suggestions.length > 0 && (\r\n        <ul\r\n          style={{\r\n            listStyle: \"none\",\r\n            padding: \"0\",\r\n            margin: \"10px 0 0\",\r\n            border: \"1px solid #ddd\",\r\n            borderRadius: \"4px\",\r\n            backgroundColor: \"#fff\",\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            zIndex: 10,\r\n          }}\r\n        >\r\n          {suggestions.map((recipe, index) => (\r\n            <li\r\n              key={index}\r\n              onClick={() => handleSuggestionClick(recipe)}\r\n              style={{\r\n                padding: \"10px\",\r\n                borderBottom: \"1px solid #eee\",\r\n                cursor: \"pointer\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                gap: \"10px\",\r\n              }}\r\n            >\r\n              <img\r\n                src={recipe.image}\r\n                alt={recipe.label}\r\n                style={{\r\n                  width: \"40px\",\r\n                  height: \"40px\",\r\n                  borderRadius: \"4px\",\r\n                  objectFit: \"cover\",\r\n                }}\r\n              />\r\n              <span>{recipe.label}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {/* Loading State */}\r\n      {loading && <p>Loading...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}